version: '3.8'

services:
  yourpet-web:
    build:
      context: ./YourPet
      dockerfile: dockerfile
    # ports: # No need to expose when using nginx (prod)
    #   - "8082:80"
    volumes:
      - ./YourPet/public:/var/www/html/public
      - ./YourPet/App:/var/www/html/App
      - ./YourPet/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
      - ./YourPet/composer.json:/var/www/html/composer.json
    depends_on:
      - yourpet-db
    environment:
      - APP_URL=${YP_APP_URL}
      - MYSQL_HOST=yourpet-db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - RESEND_API_KEY=${RESEND_API_KEY}
    networks:
      - app-network


  yourpet-db:
    image: mysql:8.4
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./YourPet/setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network


  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - PMA_HOST=yourpet-db
      - PMA_PORT=3306
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    # ports:
    #   - 8083:80
    depends_on:
      - yourpet-db
      

  nginx:
    build:
      context: ./nginx
      dockerfile: dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Entrypoint config for nginx (Always Used)
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf # Default Config (Production Ready) 
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount for SSL certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - yourpet-web
      - yourpet-db
    environment:
      - APP_ENV=${APP_ENV}
    networks:
      - app-network


  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d 
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db_data:

networks:
  app-network:
    driver: bridge